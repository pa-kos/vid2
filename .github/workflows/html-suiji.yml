name: Auto Update Content List
on:
  push:
    branches: [ main ]
    paths:
      - '**.html'
      - '!suiji.html'

jobs:
  update-list:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate File List
        id: generate-list
        run: |
          # 获取所有HTML文件（排除自身和隐藏文件）
          mapfile -t FILES < <(find . -name "*.html" ! -name "suiji.html" ! -path "./.*" -printf '%P\n')
          
          # 构建JS数组（保持原格式）
          JS_ARRAY="let htmlFiles = ["
          for ((i=0; i<${#FILES[@]}; i++)); do
            URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${FILES[$i]}"
            if ((i > 0)); then JS_ARRAY+=",\n    "; else JS_ARRAY+="\n    "; fi
            JS_ARRAY+="'$URL'"
          done
          JS_ARRAY+="\n];"
          
          # 输出到环境变量（保留换行符）
          echo "HTML_ARRAY<<EOF" >> $GITHUB_ENV
          echo "$JS_ARRAY" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Update HTML File
        run: |
          # 使用awk进行精准替换（保留文件其他内容）
          awk -v new_array="$HTML_ARRAY" '
            /let htmlFiles = \[/ { in_array=1; print new_array; next }
            in_array && /\]/ { in_array=0; next }
            !in_array { print }
          ' suiji.html > temp.html && mv temp.html suiji.html

          # 验证更新
          if grep -q "let htmlFiles = \[" suiji.html; then
            echo "更新成功"
            git config --global user.name "GitHub Actions"
            git config --global user.email "actions@github.com"
            git add suiji.html
            git commit -m "Auto-update content list [skip ci]"
            git push
          else
            echo "错误：更新失败"
            exit 1
          fi
