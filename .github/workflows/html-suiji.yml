name: Update HTML List Automatically

on:
  push:
    branches: [ main ]
    paths:
      - '**.html'
      - '!suiji.html'  # 排除自身文件
  workflow_dispatch:  # 允许手动触发

permissions:
  contents: write  # 必需写入权限

jobs:
  update-html-list:
    runs-on: ubuntu-latest

    steps:
    # 步骤1：检出代码
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 获取完整提交历史

    # 步骤2：查找所有HTML文件并生成数组
    - name: Generate HTML file list
      id: generate-list
      run: |
        # 获取所有HTML文件（排除suiji.html）
        mapfile -d '' files < <(find . -name "*.html" ! -name "suiji.html" -print0 | sort -z)
        
        # 生成标准JS数组格式
        echo "let htmlFiles = [" > html_array.txt
        for file in "${files[@]}"; do
          file="${file#./}"  # 移除开头的./
          echo "  'https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/$file'," >> html_array.txt
        done
        echo "];" >> html_array.txt

        # 存储为输出变量
        echo "html_array=$(cat html_array.txt)" >> $GITHUB_OUTPUT
        echo "=== 生成的文件列表 ==="
        cat html_array.txt

    # 步骤3：更新suiji.html文件
    - name: Update suiji.html
      run: |
        # 使用精确替换（兼容Windows/Linux换行符）
        perl -i -pe '
          BEGIN { $array = $ENV{html_array}; }
          if (/let htmlFiles = \[/) {
            $_ = $array;
          }
        ' suiji.html

        echo "=== 替换结果验证 ==="
        grep -A10 "let htmlFiles" suiji.html

    # 步骤4：提交更改
    - name: Commit changes
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add suiji.html
        if ! git diff --cached --quiet; then
          git commit -m "Auto-update HTML file list [skip ci]"
          git push
        else
          echo "没有检测到文件变更"
        fi
